<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com.hn658.framework.cache"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:property-placeholder location="classpath*:spring-config.properties" />

    <!-- Redis配置 -->
    <bean id="jedisFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:use-pool="true" />

    <!-- Redis Template配置 -->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connection-factory-ref="jedisFactory" />


    <bean id="redisStorage" class="com.hn658.framework.cache.storage.RedisStorage">
        <property name="template" ref="redisTemplate"></property>
    </bean>


    <bean id="localStorage" class="com.hn658.framework.cache.storage.LocalStorage" >
    </bean>

    <bean id="userRedisCache" class="com.hn658.framework.cache.test.UserRedisCache">
        <property name="storage" ref="redisStorage"></property>
    </bean>


    <!-- redis 单独的manager -->
    <bean id="redisCacheManager" class="com.hn658.framework.cache.redis.RedisCacheManager">
        <property name="caches" >
            <set>
                <bean class="com.hn658.framework.cache.test.UserRedisCache">
                    <property name="storage" ref="redisStorage"></property>
                </bean>
            </set>
        </property>
    </bean>


    <!-- lollay 单独的manager -->
    <bean id="locallyCacheManager" class="com.hn658.framework.cache.local.LocallyCacheManager">
        <property name="caches" >
            <set>
                <bean class="com.hn658.framework.cache.test.UserLocalCache">
                    <property name="storage" ref="localStorage"></property>
                </bean>
            </set>
        </property>
    </bean>


    <!-- 混合缓存  -->
    <bean id="cacheManager"  class="com.hn658.framework.cache.base.CompositeCacheManager" >
        <property name="cacheManagers">
            <list>
                <ref bean="redisCacheManager"/>
                <ref bean="locallyCacheManager"/>
            </list>
        </property>
    </bean>




</beans>